/*
Builder API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TestPayload struct for TestPayload
type TestPayload struct {
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	Payload string `json:"payload"`
}

// NewTestPayload instantiates a new TestPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestPayload(name string, payload string) *TestPayload {
	this := TestPayload{}
	this.Name = name
	this.Payload = payload
	return &this
}

// NewTestPayloadWithDefaults instantiates a new TestPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestPayloadWithDefaults() *TestPayload {
	this := TestPayload{}
	return &this
}

// GetName returns the Name field value
func (o *TestPayload) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TestPayload) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TestPayload) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TestPayload) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestPayload) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TestPayload) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TestPayload) SetDescription(v string) {
	o.Description = &v
}

// GetPayload returns the Payload field value
func (o *TestPayload) GetPayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *TestPayload) GetPayloadOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Payload, true
}

// SetPayload sets field value
func (o *TestPayload) SetPayload(v string) {
	o.Payload = v
}

func (o TestPayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["payload"] = o.Payload
	}
	return json.Marshal(toSerialize)
}

type NullableTestPayload struct {
	value *TestPayload
	isSet bool
}

func (v NullableTestPayload) Get() *TestPayload {
	return v.value
}

func (v *NullableTestPayload) Set(val *TestPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableTestPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableTestPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestPayload(val *TestPayload) *NullableTestPayload {
	return &NullableTestPayload{value: val, isSet: true}
}

func (v NullableTestPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


